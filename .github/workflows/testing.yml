name: Symphony tests

on:
    push:
        branches: ["develop"] # Check for pushes on develop since I tend to push edits for .gitignore and similar stuff (ik this is not good practice, but frankly idc)
    pull_request:
        branches: ["master", "develop"]

permissions:
    contents: read

jobs:
    symfony-tests:
        runs-on: ubuntu-latest

        services:
            mariadb:
                image: mariadb:latest
                env:
                    MARIADB_ROOT_PASSWORD: password
                    MARIADB_PASSWORD: password
                    MARIADB_DATABASE: app
                    MARIADB_USER: app
                ports:
                    - 3306:3306
                options: >-
                    --health-cmd="mariadb-admin ping -h localhost"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3

        steps:
            - uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.4"
                  extensions: pdo_mysql
                  coverage: none

            - uses: actions/checkout@v5
            - name: Install Dependencies
              run: composer install --no-progress --prefer-dist --no-interaction

            - name: Create .env.test.local
              run: |
                  echo "DATABASE_URL=mysql://app:password@127.0.0.1:3306/app" > .env.test.local
                  echo "APP_ENV=test" >> .env.test.local
                  echo "APP_BASE_DOMAIN=localhost" >> .env.test.local

            - name: Setup test database
              run: |
                  # Grant ALL privileges on test databases to app user
                  MYSQL_PWD=password mysql -h127.0.0.1 -uroot -e "GRANT ALL PRIVILEGES ON \`app_test%\`.* TO 'app'@'%'; FLUSH PRIVILEGES;"
                  # Create test database
                  php bin/console doctrine:database:create --env=test
                  php bin/console doctrine:migrations:migrate --no-interaction --env=test

            - name: Execute tests (Unit and Feature tests) via PHPUnit
              run: vendor/bin/phpunit
